#!/usr/bin/env bash

createIfNotExist(){
    if [ ! -e "$1" ] ; then
        touch "$1"
    fi
}


# This code si to run the content of ~/.bashrc
# because it doesn't have run permissions so we need to change the permissions
# and then change them back
#runUserBash(){
#    if [ "$(uname)" == "Darwin" ]; then
#        # Do something under Mac OS X platform
#        mod = `stat -f "%OLp" ~/.bashrc`
#    elif [ "$(expr substr $(uname -s) 1 5)" == "Linux" ]; then
#        # Do something under GNU/Linux platform
#        mod = `stat --format '%a' ~/.bashrc`
#        echo "$mod"
#    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]; then
#        # Do something under 32 bits Windows NT platform
#        echo "Not supported"
#    elif [ "$(expr substr $(uname -s) 1 10)" == "MINGW64_NT" ]; then
#        # Do something under 64 bits Windows NT platform
#        echo "Not supported"
#    fi
#}


#history -anrw $HIST_FILE_NAME

createIfNotExist ~/.bashrc
. ~/.bashrc

# Colors in the terminal

export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad
alias ls='ls -GFh'
export TERM=xterm-color

# End Colors

# Set up of history File
createIfNotExist $HIST_FILE_NAME


export HISTFILE=$HIST_FILE_NAME
export HISTCONTROL=ignorespace ; history -d 1

# End Set up of history File

# curl --data "$(history)" http://localhost:2000/newcommand?SSSH_USER=$SSSH_USER &> /dev/null

# This is for debugging
# curl --data "$(history)" http://localhost:2000/newcommand?SSSH_USER=$SSSH_USER
# export PROMPT_COMMAND='curl --data "$(history 1)" http://localhost:2000/newcommand?SSSH_USER=$SSSH_USER'

# This is for production
curl --data "$(history)" http://localhost:2000/newcommand?SSSH_USER=$SSSH_USER &> /dev/null
# export PROMPT_COMMAND='curl --data "$(history 1)" http://localhost:2000/newcommand?SSSH_USER=$SSSH_USER &> /dev/null'

export PROMPT_COMMAND='$SSSH -mode=prompt -userid=$SSSH_USER -history="$(history 1)"'

 cd

